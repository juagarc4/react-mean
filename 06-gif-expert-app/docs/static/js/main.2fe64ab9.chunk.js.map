{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodedCategory","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCLdG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACfC,EAAkBC,UAAUH,GAC5BL,EAFe,iDAEiCO,EAFjC,+DAGFE,MAAMT,GAHJ,cAGfU,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QATjB,kBAYda,GAZc,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdpB,mBAAS,CAAE2B,KAAM,GAAIQ,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KAYxC,OATAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAACP,GAAD,OACrBK,EAAS,CACPT,KAAMI,EACNG,SAAS,SAGZ,CAACf,IAEGgB,EDVmBI,CAAapB,GAA/BQ,EAD+B,EAC/BA,KAAMO,EADyB,EACzBA,QAEd,OACE,qCACE,6BAAKf,IACJe,GACC,mBAAGnB,UAAU,mCAAb,wBAEF,qBAAKA,UAAU,YAAf,SACGY,GAAQA,EAAKC,KAAI,SAACY,GAAD,OAAS,cAAC,EAAD,eAA8BA,GAAZA,EAAIV,aEX1C,SAASW,IAAgB,IAAD,EACD1C,mBAAS,CAAC,gBADT,mBAC9B2C,EAD8B,KAClB5C,EADkB,KAGrC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACG4C,EAAWd,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,W,MCNxBwB,IAASC,OAAO,cAACH,EAAD,IAAkBI,SAASC,eAAe,W","file":"static/js/main.2fe64ab9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (inputValue.trim().length > 0) {\n      setCategories((cats) => [inputValue, ...cats])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={inputValue} onChange={handleInputChange} />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","export const getGifs = async (category) => {\n  const encodedCategory = encodeURI(category)\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodedCategory}&limit=10&api_key=apRdaKcwOzqVBsDIpZE2MzSssnZXNexp`\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n  return gifs\n}\n","import React from 'react'\nimport { GifGridItem } from 'components/GifGridItem'\nimport { useFetchGifs } from 'hooks/useFetchGifs'\n\nexport const GifGrid = ({ category }) => {\n  const { gifs, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n      <div className=\"card-grid\">\n        {gifs && gifs.map((gif) => <GifGridItem key={gif.id} {...gif} />)}\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from 'helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({ data: [], loading: true })\n\n  useEffect(() => {\n    getGifs(category).then((images) =>\n      setState({\n        gifs: images,\n        loading: false,\n      })\n    )\n  }, [category])\n\n  return state\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from 'components/AddCategory'\nimport { GifGrid } from 'components/GifGrid'\nexport default function GifExpertApp() {\n  const [categories, setCategories] = useState(['Dragon Ball'])\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}